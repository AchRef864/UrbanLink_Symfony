<?php

namespace ContainerMaxs06u;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGeminiServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\GeminiService' shared autowired service.
     *
     * @return \App\Service\GeminiService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'GeminiService.php';

        $a = ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container));

        if (isset($container->privates['App\\Service\\GeminiService'])) {
            return $container->privates['App\\Service\\GeminiService'];
        }

        return $container->privates['App\\Service\\GeminiService'] = new \App\Service\GeminiService(($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), $container->getEnv('GEMINI_API_KEY'), $a);
    }
}
