{# templates/auth/reset_password/verify_code.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Verify Reset Code{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <style>
        .auth-card {
            max-width: 480px;
            border-radius: 16px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            background: white;
        }
        .auth-header {
            background: linear-gradient(to right, #3b82f6, #6366f1);
            color: white;
            padding: 24px;
            text-align: center;
        }
        .auth-body {
            padding: 32px;
        }
        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            transition: all 0.3s ease;
            text-align: center;
            font-size: 18px;
            letter-spacing: 4px;
        }
        .form-input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        .btn-primary {
            background: linear-gradient(to right, #3b82f6, #6366f1);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
        }
        .code-inputs {
            display: flex;
            justify-content: space-between;
            margin-bottom: 24px;
        }
        .code-input {
            width: 50px;
            height: 60px;
            text-align: center;
            font-size: 24px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .code-input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
    </style>
{% endblock %}

{% block body %}
    <body class="font-sans antialiased bg-gray-50">
    <div class="min-h-screen flex items-center justify-center p-4">
        <div class="auth-card w-full">
            <div class="auth-header">
                <h1 class="text-2xl font-bold">Verify Reset Code</h1>
                <p class="mt-2 opacity-90">Enter the 6-digit code sent to your email</p>
            </div>

            <div class="auth-body">
                {% for flash_error in app.flashes('error') %}
                    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
                        <div class="flex items-center">
                            <i class="fas fa-exclamation-circle mr-2"></i>
                            <span>{{ flash_error }}</span>
                        </div>
                    </div>
                {% endfor %}

                <form method="post">
                    <div class="code-inputs">
                        {% for i in 1..6 %}
                            <input type="text" class="code-input" name="code[]" maxlength="1"
                                   oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length) nextElementSibling.focus()">
                        {% endfor %}
                    </div>

                    <input type="hidden" id="fullCode" name="code">

                    <button type="submit" class="btn-primary w-full flex items-center justify-center">
                        <i class="fas fa-check-circle mr-2"></i>
                        Verify Code
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const codeInputs = document.querySelectorAll('.code-input');
            const fullCodeInput = document.getElementById('fullCode');

            codeInputs.forEach((input, index) => {
                // Focus first input on load
                if(index === 0) input.focus();

                // Handle paste event
                input.addEventListener('paste', (e) => {
                    e.preventDefault();
                    const pasteData = e.clipboardData.getData('text').trim();
                    if(pasteData.length === 6 && /^\d+$/.test(pasteData)) {
                        pasteData.split('').forEach((char, i) => {
                            if(codeInputs[i]) {
                                codeInputs[i].value = char;
                            }
                        });
                        codeInputs[5].focus();
                    }
                });

                // Handle backspace
                input.addEventListener('keydown', (e) => {
                    if(e.key === 'Backspace' && !input.value && index > 0) {
                        codeInputs[index-1].focus();
                    }
                });
            });

            // Update hidden input before form submission
            document.querySelector('form').addEventListener('submit', function() {
                let code = '';
                codeInputs.forEach(input => {
                    code += input.value;
                });
                fullCodeInput.value = code;
            });
        });
    </script>
    </body>
{% endblock %}