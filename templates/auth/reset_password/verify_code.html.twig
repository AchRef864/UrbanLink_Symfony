{# templates/auth/reset_password/verify_code.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Verify Reset Code{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <style>
        :root {
            --primary: #3b82f6;
            --primary-light: #93c5fd;
            --primary-dark: #1d4ed8;
            --secondary: #6366f1;
            --accent: #f59e0b;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #94a3b8;
            --danger: #ef4444;
            --success: #10b981;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            --shadow-primary: 0 4px 14px 0 rgba(59, 130, 246, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        body {
            background-color: #f1f5f9;
            min-height: 100vh;
            display: flex;
            color: var(--dark);
            line-height: 1.6;
        }

        /* Background animation */
        .auth-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .auth-bg::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.08) 0%, rgba(99, 102, 241, 0.06) 100%);
            animation: gradientShift 12s ease infinite;
            background-size: 200% 200%;
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        /* Auth container */
        .auth-container {
            width: 100%;
            max-width: 28rem;
            margin: auto;
            padding: 2rem;
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Card styling */
        .auth-card {
            background: white;
            border-radius: 1.25rem;
            box-shadow: var(--shadow-lg);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .auth-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

        /* Header */
        .auth-header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            padding: 2.5rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .auth-header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            transform: rotate(30deg);
            animation: shine 3s infinite linear;
        }

        @keyframes shine {
            from { transform: translateX(-100%) rotate(30deg); }
            to { transform: translateX(100%) rotate(30deg); }
        }

        .auth-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
        }

        .auth-subtitle {
            opacity: 0.9;
            font-size: 0.9375rem;
            font-weight: 400;
            position: relative;
        }

        /* Body */
        .auth-body {
            padding: 2.5rem 2rem;
        }

        /* Code input styling */
        .code-inputs {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
            gap: 0.75rem;
        }

        .code-input {
            width: 3.5rem;
            height: 4rem;
            text-align: center;
            font-size: 1.5rem;
            font-weight: 600;
            border: 2px solid #e2e8f0;
            border-radius: 0.75rem;
            transition: var(--transition);
            background-color: #f8fafc;
            color: var(--dark);
        }

        .code-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);
            background-color: white;
        }

        /* Button */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 1rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            font-size: 1rem;
            transition: var(--transition);
            cursor: pointer;
            width: 100%;
            position: relative;
            overflow: hidden;
            border: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            box-shadow: var(--shadow-primary);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(59, 130, 246, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-icon {
            margin-right: 0.75rem;
            font-size: 1.1rem;
        }

        /* Alert */
        .alert {
            padding: 1rem 1.25rem;
            border-radius: 0.75rem;
            margin-bottom: 1.75rem;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            animation: fadeIn 0.4s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .alert-danger {
            background-color: rgba(239, 68, 68, 0.1);
            color: var(--danger);
            border-left: 4px solid var(--danger);
        }

        .alert-icon {
            margin-right: 0.75rem;
            font-size: 1.25rem;
        }

        /* Back link */
        .back-link {
            display: inline-flex;
            align-items: center;
            color: var(--primary);
            font-size: 0.9375rem;
            font-weight: 500;
            margin-top: 2rem;
            text-decoration: none;
            transition: var(--transition);
            justify-content: center;
        }

        .back-link:hover {
            color: var(--primary-dark);
            text-decoration: underline;
        }

        .back-link i {
            margin-right: 0.5rem;
            transition: var(--transition);
        }

        .back-link:hover i {
            transform: translateX(-3px);
        }

        /* Responsive */
        @media (max-width: 640px) {
            .auth-container {
                padding: 1.5rem;
            }
            
            .auth-header {
                padding: 2rem 1.5rem;
            }
            
            .auth-body {
                padding: 2rem 1.5rem;
            }
            
            .auth-title {
                font-size: 1.5rem;
            }

            .code-input {
                width: 2.5rem;
                height: 3.5rem;
                font-size: 1.25rem;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="auth-bg"></div>
    
    <div class="auth-container">
        <div class="auth-card">
            <div class="auth-header">
                <h1 class="auth-title">Verify Reset Code</h1>
                <p class="auth-subtitle">Enter the 6-digit code sent to your email</p>
            </div>

            <div class="auth-body">
                {% for flash_error in app.flashes('error') %}
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle alert-icon"></i>
                        {{ flash_error }}
                    </div>
                {% endfor %}

                <form method="post">
                    <div class="code-inputs">
                        {% for i in 1..6 %}
                            <input type="text" class="code-input" name="code[]" maxlength="1"
                                   oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length) nextElementSibling.focus()">
                        {% endfor %}
                    </div>

                    <input type="hidden" id="fullCode" name="code">

                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-check-circle btn-icon"></i>
                        Verify Code
                    </button>
                </form>

                <a href="{{ path('app_forgot_password_request') }}" class="back-link">
                    <i class="fas fa-arrow-left"></i>
                    Resend Code
                </a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const codeInputs = document.querySelectorAll('.code-input');
            const fullCodeInput = document.getElementById('fullCode');

            // Focus first input on load
            if(codeInputs[0]) codeInputs[0].focus();

            codeInputs.forEach((input, index) => {
                // Handle paste event
                input.addEventListener('paste', (e) => {
                    e.preventDefault();
                    const pasteData = e.clipboardData.getData('text').trim();
                    if(pasteData.length === 6 && /^\d+$/.test(pasteData)) {
                        pasteData.split('').forEach((char, i) => {
                            if(codeInputs[i]) {
                                codeInputs[i].value = char;
                            }
                        });
                        codeInputs[5].focus();
                    }
                });

                // Handle backspace
                input.addEventListener('keydown', (e) => {
                    if(e.key === 'Backspace' && !input.value && index > 0) {
                        codeInputs[index-1].focus();
                    }
                });
            });

            // Update hidden input before form submission
            document.querySelector('form').addEventListener('submit', function() {
                let code = '';
                codeInputs.forEach(input => {
                    code += input.value;
                });
                fullCodeInput.value = code;
            });
        });
    </script>
{% endblock %}